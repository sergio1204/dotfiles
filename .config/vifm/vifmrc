" vim: filetype=vifm :
" Sample configuration file for vifm (last updated: 3 April, 2023)
" You can edit this file by hand.
" The " character at the beginning of a line comments out the line.
" Blank lines are ignored.
" The basic format for each item is shown with an example.

" --------------------------------------------------------------------------------
" -------------------------  Main settings  ------------------------------------
" ----------------------------------------------------------------------------

" Command used to edit files in various contexts.  The default is vim.
" If you would like to use another vi clone such as Elvis or Vile
" you will need to change this setting.
" if executable('nvim')
"     set vicmd=nvim
" elseif executable('vim')
"     set vicmd=vim
" elseif executable('elvis')
"     set vicmd=elvis\ -G\ termcap
" elseif executable('vile')
"     set vicmd=vile
if $EDITOR != ''
    echo 'Note: using `'.$EDITOR.'` as an editor'
    let &vicmd = $EDITOR
endif

" This makes vifm perform file operations on its own instead of relying on
" standard utilities like `cp`.  While using `cp` and alike is a more universal
" solution, it's also much slower when processing large amounts of files and
" doesn't support progress measuring.
set syscalls

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.
set trash

" What should be saved automatically on restarting vifm.
set vifminfo=dhistory,chistory,state,tui,shistory,
            \phistory,fhistory,dirstack,registers,bookmarks,bmarks

" This is how many directories to store in the directory history.
set history=100

" Automatically resolve symbolic links on l or Enter.
set nofollowlinks

" Natural sort of (version) numbers within text.
set sortnumbers

" Sorting files after start
set sort=+iname

" Maximum number of changes that can be undone.
set undolevels=100

" Use Vim's format of help file (has highlighting and "hyperlinks").
" If you would rather use a plain text help file set novimhelp.
set vimhelp

" If you would like to run an executable file when you
" press Enter, l or Right Arrow, set this.
set norunexec

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.
set timefmt='%Y/%m/%d %H:%M'

" Show list of matches on tab completion in command-line mode
set wildmenu

" Display completions in a form of popup with descriptions of the matches
set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files).  In other view, when available.
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

" Ignore case in search patterns unless it contains at least one uppercase
" letter
set ignorecase
set smartcase

" Don't highlight search results automatically
set nohlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists
set scrolloff=4

" Don't do too many requests to slow file systems
if !has('win')
    set slowfs=curlftpfs
endif

" Set custom status line look
set statusline="  %t%= %E %15A %4o %10u:%-7g %20d  "

" List of color schemes to try (picks the first one supported by the terminal)
colorscheme Default

" ----------------------------------------------------------------------------------
" ------------------------------  Bookmarks  -------------------------------------
" ------------------------------------------------------------------------------

" :mark mark /full/directory/path [filename]

mark r /
mark M /run/media
mark h ~/
mark d ~/Documents
mark D ~/Downloads
mark m ~/Music
mark p ~/Pictures
mark v ~/Videos
mark c ~/.config

" ----------------------------------------------------------------------------------
" -------------------------------  Commands  -------------------------------------
" ------------------------------------------------------------------------------

" :com[mand][!] command_name action
"
" These are some of the macros that can be used in the action part:
"  %a for user arguments
"  %c for current file under the cursor
"  %C for current file under the cursor of inactive pane
"  %f for selected file(s)
"  %F for selected file(s) of inactive pane
"  %b is the same as %f %F
"  %d for current directory name
"  %D for current directory name of inactive pane
"  %r{x} for list of files in register {x}
"  %m runs the command in a menu window
"  %u uses command's output to build a file list
"  see `:help vifm-macros` and `:help vifm-filename-modifiers` for more

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %c.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep vim "+grep %a"
command! reload :write | restart full
command! drop dragon-drop -a -x %f
command! sdcoff udisksctl power-off -b /dev/sdc
command! lsblk lsblk %m 2> /dev/null

" ----------------------------------------------------------------------------------
" ----------------------  File types association  --------------------------------
" ------------------------------------------------------------------------------

" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
"
" The first entry is the default program to be used with a matching file.
" The other programs for the file type can be accessed via :file command.
" The command macros like %f, %F, %d, %D may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.
" Spaces in an app name must be escaped, for example: QuickTime\ Player.app

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of the following formats:
"
" :filetype patterns FUSE_MOUNT|mount_cmd %SOURCE_FILE %DESTINATION_DIR
"
" %SOURCE_FILE and %DESTINATION_DIR are filled in at runtime.
"
" Example:
" :filetype *.zip,*.[jwe]ar FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype patterns FUSE_MOUNT2|mount_cmd %PARAM %DESTINATION_DIR
"
" %PARAM and %DESTINATION_DIR are filled in at runtime.
"
" Example:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
"
" %PARAM value is the first line of the matched file, example: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.  There is also %FOREGROUND, which is useful for entering passwords.

" Pdf / Djvu / PostScript
filextype *.pdf,*.djvu,*.ps,*.eps,*.ps.gz
        \ zathura %c %i
fileviewer *.pdf
        " pdftotext is a part poppler-utils
        \ pdftotext -nopgbrk %c -

" Audio
filetype *.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus,*.aac,*.mpga
        \ mpv %f &
fileviewer *.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus,*.aac,*.mpga
        \ ffprobe -hide_banner -pretty %c 2>&1

" Video
filextype *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.divx,*.as[fx]
        \ mpv %f &
fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.divx,*.as[fx]
        \ ffprobe -hide_banner -pretty %c 2>&1

" Web
filextype *.xhtml,*.html,*.htm
        \ firefox %f

" Object
filetype *.o
        \ nm %f | less

" Man page
filetype *.[1-8]
        \ man ./%c
fileviewer *.[1-8]
        \ man ./%c | col -b

" Images
filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
        \ feh -Fd --image-bg "#282c34" --start-at %d/%c 2> /dev/null &
filextype *.svg,*.svgz
        \ feh -Fd --image-bg "#282c34" --start-at %d/%c 2> /dev/null &
        " \ inkscape %f
filextype *.cr2
        \ darktable %f
filextype *.xcf
        \ gimp %f
filextype .kra
        \ krita %f
filextype .blend
        \ blender %f
fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm,*.svg
        " identify is a part ImageMagick
        \ identify %f
        "  \ kitten icat --silent --transfer-mode=file --place=%pwx%ph@%pxx%py %c >/dev/tty </dev/tty %N
        "  \ %pc
        "  \ kitten icat --clear --silent >/dev/tty </dev/tty %N

" OpenRaster
filextype *.ora
        \ mypaint %f

" Mindmap
filextype *.vym
        \ vym %f

" MD5 / SHA1 / SHA256 / SHA512
filetype *.md5
        \ md5sum -c %f %S
filetype *.sha1
        \ sha1sum -c %f %S
filetype *.sha256
        \ sha256sum -c %f %S
filetype *.sha512
        \ sha512sum -c %f %S

" GPG signature
filetype *.asc
        \ !!gpg --verify %c

" Torrent
filetype *.torrent
        \ deluge %c
fileviewer *.torrent
        \ aria2c -S %c

" Zip / 7z / Rar
filetype *.zip,*.jar,*.war,*.ear,*.oxt
        \ unzip %c
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt
        \ unzip -l %c
fileviewer *.7z
        \ 7z l %c
fileviewer *.rar
        \ unrar v %c

" Tar
fileviewer *.tgz,*.tar.gz
        \ tar -tzf %c
fileviewer *.tar.bz2,*.tbz2
        \ tar -tjf %c
fileviewer *.tar.xz,*.txz
        \ tar -tJf %c
fileviewer *.tar.zst,*.tzst
        \ tar -t --zstd -f %c
fileviewer *.tar
        \ tar -tf %c

" Office
filextype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx,*.ppt
        \ libreoffice %f
fileviewer *.odt
        \ odt2txt %c
fileviewer *.doc
        \ catdoc %c
fileviewer *.docx
        \ docx2txt.pl %f -

" JSON
fileviewer *.json,*.jsonc
        \ jq -C . %c,
        \ python -m json.tool %c

" TuDu files
filetype *.tudu
        \ tudu -f %c

" Disable preview
fileviewer .*.parts,*.part,*.apk,*.djvu,*.ttf,*.kdbx,*.iso,*.deb,*.rpm,*.exe
        \ echo No preview available. %i

" ----------------------------------------------------------------------------------
" -------------------  Syntax highlighting in preview  ---------------------------
" ------------------------------------------------------------------------------

" 256-color terminal
fileviewer *.[ch],*.[ch]pp                           highlight -O xterm256 -s base16/onedark -S c %c
fileviewer Makefile,Makefile.*                       highlight -O xterm256 -s base16/onedark -S make %c
fileviewer *.markdown,*.md                           highlight -O xterm256 -s base16/onedark -S markdown %c
fileviewer *.rst                                     highlight -O xterm256 -s base16/onedark -S rst %c
fileviewer *.diff                                    highlight -O xterm256 -s base16/onedark -S diff %c
fileviewer *.txt                                     highlight -O xterm256 -s base16/onedark -S txt %c
fileviewer *.css,*.rasi                              highlight -O xterm256 -s base16/onedark -S css %c
fileviewer *.scss                                    highlight -O xterm256 -s base16/onedark -S scss %c
fileviewer *.xml,*.xbel                              highlight -O xterm256 -s base16/onedark -S xml %c
fileviewer *.html                                    highlight -O xterm256 -s base16/onedark -S html %c
fileviewer *.yml,*.yaml                              highlight -O xterm256 -s base16/onedark -S yaml %c
fileviewer *.toml                                    highlight -O xterm256 -s base16/onedark -S toml %c
fileviewer *.cfg,*.ini,.git*,.gtkrc-2.0,dunstrc      highlight -O xterm256 -s base16/onedark -S ini %c
fileviewer *.conf,config,sxhkdrc,.Xresources         highlight -O xterm256 -s base16/onedark -S conf %c
fileviewer *.py                                      highlight -O xterm256 -s base16/onedark -S python %c
fileviewer *.lua,.luacheckrc,*.rockspec              highlight -O xterm256 -s base16/onedark -S lua %c
fileviewer .bash*,*.sh,.xinitrc,bspwmrc              highlight -O xterm256 -s base16/onedark -S shellscript %c
fileviewer .vimrc,vifmrc,.viminfo,*.vim,*.vifm,*.vmb highlight -O xterm256 -s base16/onedark -S vimscript %c
fileviewer *.hs,xmobarrc                             highlight -O xterm256 -s base16/onedark -S haskell %c

" 16-color terminal
" fileviewer *.c,*.h highlight -O ansi -s dante %c
"
" Or leave it for automatic detection
" fileviewer *[^/] pygmentize -O style=monokai -f console256 -g

" Displaying pictures in terminal
" fileviewer *.jpg,*.png shellpic %c

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
" For *nix:
" filetype * xdg-open
" For OS X:
" filetype * open
" For Windows:
" filetype * explorer %"f &

" ----------------------------------------------------------------------------------
" -------------------  Panel configuration examples  -----------------------------
" ------------------------------------------------------------------------------

" Customize view columns a bit (enable ellipsis for truncated file names)
" set viewcolumns=-{name}..,6{}.

" Show vertical border
" set fillchars=vborder:│

" Filter-out build and temporary files
" filter! {*.lo,*.o,*.d,*.class,*.pyc,*.pyo,.*~}

" ----------------------------------------------------------------------------------
" ---------------------  Sample keyboard mappings  -------------------------------
" ------------------------------------------------------------------------------

" Turn pane into tree view
nnoremap T :tree!<cr>

" Select files and move cursor to the next
nnoremap <space> gatj

" Start shell in current directory
nnoremap ~ :shell<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Sorting files between iname and ctime
nnoremap s :if &sort == '+iname'
         \ |    set sort=-ctime
         \ |    echo 'Sorted by ctime'
         \ |else
         \ |    set sort=+iname
         \ |    echo 'Sorted by iname'
         \ |endif<cr>

" Reverse sorting
nnoremap R :invert o<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

if $DISPLAY != '' && executable('gvim')
    " Open file in existing instance of gvim
    nnoremap o :!gvim --remote-tab-silent %f<cr>
    " Open file in new instance of gvim
    nnoremap O :!gvim %f<cr>
endif

" Open file in the background using its default program
nnoremap gb :file &<cr>l

" Interaction with system clipboard
if has('win')
    " Yank current directory path to Windows clipboard with forward slashes
    nnoremap yp :!echo %"d:gs!\!/! %i | clip<cr>
    " Yank path to current file to Windows clipboard with forward slashes
    nnoremap yf :!echo %"c:gs!\!/! %i | clip<cr>
elseif $WAYLAND_DISPLAY != ''
    if executable('wl-copy')
        " Yank current directory path into primary and selection clipboards
        nnoremap yd :!echo -n %d | wl-copy %i &&
                    \ echo -n %d | wl-copy -p %i<cr>
        " Yank current file path into into primary and selection clipboards
        nnoremap yf :!echo -n %c:p | wl-copy %i &&
                    \ echo -n %c:p | wl-copy -p %i<cr>
    endif
elseif $DISPLAY != ''
    if executable('xclip')
        " Yank current directory path into the clipboard
        nnoremap yd :!echo %d | xclip %i<cr>
        " Yank current file path into the clipboard
        nnoremap yf :!echo %c:p | xclip %i<cr>
    elseif executable('xsel')
        " Yank current directory path into primary and selection clipboards
        nnoremap yd :!echo -n %d | xsel --input --primary %i &&
                    \ echo -n %d | xsel --clipboard --input %i<cr>
        " Yank current file path into into primary and selection clipboards
        nnoremap yf :!echo -n %c:p | xsel --input --primary %i &&
                    \ echo -n %c:p | xsel --clipboard --input %i<cr>
    endif
endif

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw

" As above, but without the file extension
" nnoremap I cW<c-a>
" nnoremap cc cW<c-u>
" nnoremap A cW

" Open console in current directory
if $DISPLAY != '' && executable('xterm')
    nnoremap ,t :!xterm &<cr>
elseif $TERMINAL != ''
    nnoremap ,t :!$TERMINAL &<cr>
endif

" Open editor to edit vifmrc and apply settings after returning to vifm
nnoremap ,c :write | edit $MYVIFMRC | restart full<cr>

" Open gvim to edit vifmrc
if $DISPLAY != '' && executable('gvim')
    nnoremap ,C :!gvim --remote-tab-silent $MYVIFMRC &<cr>
endif

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" Example of standard two-panel file managers mappings
nnoremap <f3> :!less %f<cr>
nnoremap <f4> :edit<cr>
nnoremap <f5> :copy<cr>
nnoremap <f6> :move<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :delete<cr>

" Midnight commander alike mappings
" Open current directory in the other pane
nnoremap <a-i> :sync<cr>
" Open directory under cursor in the other pane
nnoremap <a-o> :sync %c<cr>
" Swap panes
nnoremap <c-u> <c-w>x

" ----------------------------------------------------------------------------------
" --------------------  Various customization examples  --------------------------
" ------------------------------------------------------------------------------

" Use ag (the silver searcher) instead of grep
" set grepprg='ag --line-numbers %i %a %s'

" Add additional place to look for executables
" let $PATH = $HOME.'/bin/fuse:'.$PATH

" Block particular shortcut
" nnoremap <left> <nop>

" Export IPC name of current instance as environment variable and use it to
" communicate with the instance later.
"
" It can be used in some shell script that gets run from inside vifm, for
" example, like this:
"     vifm --server-name "$VIFM_SERVER_NAME" --remote +"cd '$PWD'"
"
" let $VIFM_SERVER_NAME = v:servername

" Activate screen/tmux support
" screen!

" ----------------------------------------------------------------------------------
" --------------------  Icon decorations example  --------------------------------
" ------------------------------------------------------------------------------

" Ranger devicons for ViFM
" https://github.com/cirala/vifm_devicons
"
" Filetypes/directories
set classify=' :dir:/, :exe:, :reg:, :link:,? :?:, ::../::'

" Specific files
set classify+=' ::.Xdefaults,,.Xresources,,.bashprofile,,.bash_profile,,.bashrc,,.dmrc,,.d_store,,.fasd,,.gitconfig,,.gitignore,,.jack-settings,,.mime.types,,.nvidia-settings-rc,,.pam_environment,,.profile,,.recently-used,,.selected_editor,,.xinitpurc,,.zprofile,,.yarnc,,.snclirc,,.tmux.conf,,.urlview,,.config,,.ini,,.user-dirs.dirs,,.mimeapps.list,,.offlineimaprc,,.msmtprc,,.Xauthority,,config::'
set classify+=' ::dropbox::'
set classify+=' ::favicon.*,,README,,readme::'
set classify+=' ::.vim,,.vimrc,,.gvimrc,,.vifm::'
set classify+=' ::gruntfile.coffee,,gruntfile.js,,gruntfile.ls::'
set classify+=' ::gulpfile.coffee,,gulpfile.js,,gulpfile.ls::'
set classify+=' ::ledger::'
set classify+=' ::license,,copyright,,copying,,LICENSE,,COPYRIGHT,,COPYING::'
set classify+=' ::node_modules::'
set classify+=' ::react.jsx::'

" File extensions
set classify+='λ ::*.ml,,*.mli::'
set classify+=' ::*.styl::'
set classify+=' ::*.scss::'
set classify+=' ::*.py,,*.pyc,,*.pyd,,*.pyo::'
set classify+=' ::*.php::'
set classify+=' ::*.markdown,,*.md::'
set classify+=' ::*.json,,*.jsonc::'
set classify+=' ::*.js::'
set classify+=' ::*.bmp,,*.gif,,*.ico,,*.jpeg,,*.jpg,,*.png,,*.svg,,*.svgz,,*.tga,,*.tiff,,*.xmb,,*.xcf,,*.xpm,,*.xspf,,*.xwd,,*.cr2,,*.dng,,*.3fr,,*.ari,,*.arw,,*.bay,,*.crw,,*.cr3,,*.cap,,*.data,,*.dcs,,*.dcr,,*.drf,,*.eip,,*.erf,,*.fff,,*.gpr,,*.iiq,,*.k25,,*.kdc,,*.mdc,,*.mef,,*.mos,,*.mrw,,*.obm,,*.orf,,*.pef,,*.ptx,,*.pxn,,*.r3d,,*.raf,,*.raw,,*.rwl,,*.rw2,,*.rwz,,*.sr2,,*.srf,,*.srw,,*.tif,,*.x3f,,*.webp,,*.avif,,*.jxl::'
set classify+=' ::*.ejs,,*.htm,,*.html,,*.slim,,*.xml::'
set classify+=' ::*.mustasche::'
set classify+=' ::*.css,,*.less,,*.bat,,*.conf,,*.ini,,*.rc,,*.yml,,*.cfg::'
set classify+=' ::*.rss::'
set classify+=' ::*.coffee::'
set classify+=' ::*.twig::'
set classify+=' ::*.c++,,*.cpp,,*.cxx,,*.h::'
set classify+=' ::*.cc,,*.c::'
set classify+=' ::*.hs,,*.lhs::'
set classify+=' ::*.lua::'
set classify+=' ::*.jl::'
set classify+=' ::*.go::'
set classify+=' ::*.ts::'
set classify+=' ::*.db,,*.dump,,*.sql::'
set classify+=' ::*.sln,,*.suo::'
set classify+=' ::*.exe::'
set classify+=' ::*.diff,,*.sum,,*.md5,,*.sha512::'
set classify+=' ::*.scala::'
set classify+=' ::*.java,,*.jar::'
set classify+=' ::*.xul::'
set classify+=' ::*.clj,,*.cljc::'
set classify+=' ::*.pl,,*.pm,,*.t::'
set classify+=' ::*.cljs,,*.edn::'
set classify+=' ::*.rb::'
set classify+=' ::*.fish,,*.sh,,*.bash::'
set classify+=' ::*.dart::'
set classify+=' ::*.f#,,*.fs,,*.fsi,,*.fsscript,,*.fsx::'
set classify+=' ::*.rlib,,*.rs::'
set classify+=' ::*.d::'
set classify+=' ::*.erl,,*.hrl::'
set classify+=' ::*.ai::'
set classify+=' ::*.psb,,*.psd::'
set classify+=' ::*.jsx::'
set classify+=' ::*.aac,,*.anx,,*.asf,,*.au,,*.axa,,*.flac,,*.m2a,,*.m4a,,*.mid,,*.midi,,*.mp3,,*.mpc,,*.oga,,*.ogg,,*.ogx,,*.ra,,*.ram,,*.rm,,*.spx,,*.wav,,*.wma,,*.ac3::'
set classify+=' ::*.avi,,*.flv,,*.mkv,,*.mov,,*.mp4,,*.mpeg,,*.mpg,,*.webm,,*.av1::'
set classify+=' ::*.epub,,*.pdf,,*.fb2,,*.djvu::'
set classify+=' ::*.7z,,*.apk,,*.bz2,,*.cab,,*.cpio,,*.deb,,*.gem,,*.gz,,*.gzip,,*.lh,,*.lzh,,*.lzma,,*.rar,,*.rpm,,*.tar,,*.tgz,,*.xz,,*.zip,,*.zst::'
set classify+=' ::*.cbr,,*.cbz::'
set classify+=' ::*.log::'
set classify+=' ::*.doc,,*.docx,,*.adoc::'
set classify+=' ::*.xls,,*.xlsmx::'
set classify+=' ::*.pptx,,*.ppt::'
